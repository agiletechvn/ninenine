{% block content %}


    <fieldset class="form-group">
        <legend>Cronjob Result <label class="small label label-info">$cronjob.created</label></a></legend>
        <progress id="cronjob_result" class="progress progress-info" value="$cronjob.running_percent" max="100">${cronjob.running_percent}%</progress>
    </fieldset>

    <table id="list_group" class="table table-striped table-bordered" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>STT</th>
                <th>Name</th>
                <th>Post</th>
            </tr>
        </thead>

        <tfoot>
            <tr>
                <th>STT</th>
                <th>Name</th>
                <th>Post</th>
            </tr>
        </tfoot>

        <tbody>


        </tbody>
    </table>


    <div class="modal fade" id="validateTokenModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalLabel">Revalidate Token</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="message-text" class="control-label">Token:</label>
                            <textarea class="form-control" id="access_token"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnValidateToken" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block css %}
    <link href="~/assets/data-tables/DT_bootstrap.css" rel="stylesheet" type="text/css"/>
    <style>.dataTables_wrapper{clear:both}</style>
{% endblock %}

{% block js %}

    <script src="~/assets/data-tables/jquery.dataTables.js" type="text/javascript"></script>
    <script src="~/assets/data-tables/DT_bootstrap.js"></script>
    <script src="~/js/ZeroClipboard.js" type="text/javascript"></script>
    <script src="~/js/TableTools.js" type="text/javascript"></script>

    <script>

        var cronjobData = $cronjob.data;
        var cronjobResult = $cronjob.result_data;
        var isDeleted = $cronjob.deleted;

        $(function () {


            $('#navbar > li:eq(1)').addClass('active');

            $.extend(true, $.fn.DataTable.TableTools.classes, {
                "container": "pull-right btn-group",
                "buttons": {
                    "normal": "btn",
                    "disabled": "btn disabled"
                },
                "collection": {
                    "container": "DTTT_dropdown dropdown-menu",
                    "buttons": {
                        "normal": "",
                        "disabled": "disabled"
                    }
                }
            });

            $.fn.DataTable.TableTools.DEFAULTS.sSwfPath = "themes/fbtool/assets/swf/tableTools.swf";

            // Have the collection use a bootstrap compatible dropdown
            $.extend(true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
                "collection": {
                    "container": "ul",
                    "button": "li",
                    "liner": "a"
                }
            });

            cronjobData.link_url = cronjobData.link_url.split("\n");

            var table = $('#list_group').dataTable({
                fnRowCallback: function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    // Bold the grade for all 'A' grade browsers
                    var index = iDisplayIndex + 1;
                    $('td:eq(0)', nRow).html(index);
                    var groupId = aData[1];
                    $('td:eq(1)', nRow).html('<a target="_blank" href="https://facebook.com/' + groupId + '">' + aData[2] + '</a>');
                    $('td:eq(2)', nRow).html('<img src="themes/fbtool/img/fbloader.gif">');
                    return nRow;
                },
                bPaginate: false,
                bFilter: false,
                bSort: false
            });

            var tt = new $.fn.dataTable.TableTools(table);

            $(tt.dom.container).insertBefore('div.dataTables_wrapper');


            var tableData = [];
            $.each(cronjobData.groups, function () {
                tableData.push([null, this.id, this.name, '']);
            });
            table.fnAddData(tableData);

            function getHtml(postIds) {
                var postHtml = '';
                if (postIds) {
                    for(var index=0;index<postIds.length;++index){
                        if(postIds[index] != ""){
                            postHtml += '<a target="_blank" href="https://facebook.com/' + postIds[index] + '">' 
                                    + cronjobData.link_url[index] + '</a><br/>';
                            // show only one ?
                            break;
                        }
                    }
                }
                return postHtml;
            }

            function setCronjobResult(ret) {
                
                var runningPercent = Math.round(((ret.length*cronjobData.link_url.length) / (cronjobData.groups.length*cronjobData.link_url.length)) * 100);
                $('#cronjob_result').val(runningPercent).text(runningPercent + '%');
                if ((!isDeleted && runningPercent === 100) || (isDeleted && runningPercent === 0)) {
                    // change status to success
                    $('#cronjob_result').removeClass('progress-info').addClass('progress-success');
                    interruped = true;
                    
                }
                
                
                // update list result  
                var numberFunc = function () {
                    // if new ajax has come, clear previous update function to make a new one
                    clearTimeout(tNumberFunc);
                    var number = 0;
                    // check if we delete or add
                    if(counter <= ret.length){ // add is ok, update from current, event delete task                        
                        for (var i = counter; i < ret.length; ++i) {
                            table.fnUpdate(getHtml(ret[i]), i, 2, false); // Single cell 
                            
                            counter = i;
                            if (number++ === 50) {
                                // get back after 1 second
                                tNumberFunc = setTimeout(numberFunc, 100);
                                break;
                            }
                        }
                    } else {
                        for (var i = counter; i > ret.length; --i) {
                            table.fnUpdate('<img src="themes/fbtool/img/fbloader.gif">', i, 2, false); // Single cell 
                            counter = i;
                            if (number++ === 50) {
                                // get back after 1 second
                                tNumberFunc = setTimeout(numberFunc, 100);
                                break;
                            }
                        }
                    }
                };
                numberFunc();
                //console.log(counter);
        
            }


            var counter = 0;
            var interruped = false;
            var tNumberFunc = null;
            setInterval(function () {
                if (!interruped) {
                    $.get('index/cronjob_result/$cronjob.id', function (ret) {
                        if (ret.error) {
                            // show dialog, close to set interupped
                            interruped = true;
                            $('#validateTokenModal').modal({
                                backdrop: 'static'
                            });
                        } else {
                            setCronjobResult(ret);
                        }
                    }, 'json');
                }
            }, 5000);
            
            
            setCronjobResult(cronjobResult);

            $('#btnValidateToken').on('click', function () {
                var access_token = $('#access_token').val();
                $.post('index/validate', {access_token: access_token}, function () {
                    interruped = false;
                    $('#validateTokenModal').modal('hide');
                });
            });


        });
    </script>

{% endblock %}